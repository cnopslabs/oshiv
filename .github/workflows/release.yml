name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        default: ''

  push:
    tags:
      - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set release tag environment variable
        id: set_release_tag
        run: echo "RELEASE_TAG=${{ github.event.inputs.tag || github.ref_name }}" >> $GITHUB_ENV

      - name: Set up Git and check/create tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            git fetch --all --tags
            if ! git rev-parse ${{ github.event.inputs.tag }} >/dev/null 2>&1; then
              echo "Tag ${{ github.event.inputs.tag }} does not exist. Creating it now..."
              git tag ${{ github.event.inputs.tag }}
              git push origin ${{ github.event.inputs.tag }}
            else
              echo "Tag ${{ github.event.inputs.tag }} already exists. Checking out..."
              git checkout ${{ github.event.inputs.tag }}
            fi
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          body: |
            Release ${{ env.RELEASE_TAG }} with pre-built binaries.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}


  release:
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set release tag environment variable
        id: set_release_tag
        run: echo "RELEASE_TAG=${{ github.event.inputs.tag || github.ref_name }}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install Staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Install Zip on Windows
        if: runner.os == 'Windows'
        run: choco install zip -y

      - name: Verify environment
        run: make check-env

      - name: Install dependencies
        run: go mod tidy

      - name: Build binary for native platform
        env:
          VERSION: ${{ env.RELEASE_TAG }}
        run: |
          make clean
          make install-local

      - name: Compress binary
        run: zip build/oshiv_${{ env.RELEASE_TAG }}_${{ matrix.os }}.zip build/*

      - name: Upload binary asset to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/oshiv_${{ env.RELEASE_TAG }}_${{ matrix.os }}.zip
          asset_name: oshiv_${{ env.RELEASE_TAG }}_${{ matrix.os }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}